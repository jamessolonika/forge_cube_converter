Files needed

settings.py:
    -check if there is a saved file
    -if yes, load saved json settings (can be previous run or user default)
    -if no, load default settings and ask for forge folder
    
    -Defaults needed:
        -classes for all draft and sealed options
        -oldest and newest dates
        -number of players
        -paths to cube, draft, sealed and editions folder within forge
        -list of set types that count as premium

    -Functions needed:
        -when booster string is changed, count number of cards requested * number of players
        -use forge path and default cube, draft, sealed and editions to create file paths

interface.py:
    -draw and handle interface (implemented later)

cube_converter.py: (main file)
    -ask user for input file
    -read in file and determine type
    -create header text for output file
    -read input line by line
        -get name of card on each line based on input file type
        -find set for card that matches chosed algorithm
        -save card name and set for output
    -write out dck file and draft/sealed if wanted
    -move to forge folder if wanted
    -save user settings for next time if a default hasnt been picked